How did viewing a diff between 2 versions of a file help you see the bug that was introduced?
It is easier to debug only the lines that were updated. This way you do not spend time on lines that didn't change

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Recovering pieces of code that currently are not part of the code but was used once.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: Easier to map and compare changes, find bugs and restore the program to a working version
Cons: Prone to human error, must rely on user's reminding to save and also subjective

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git was made for big coding projects that use multiple files, while others like Google docs were made for simple text writting without the need of multiple files tracking

How can you use the commands git log and git diff to view the history of files?
git log will allow you to read the logs and see the ids from every commit and diff allows you to make more specific comparisons between 2 ids.

How might using version control make you more confident to make changes that could break something?
I can easilly go back to my previous version and starover if I don't realize how to fix the bug.

How Do You Want to Use Git?
I'll use on my next project, although I don't know how to use it yet. Only acessing existing repositories, not creating new ones for my projects.